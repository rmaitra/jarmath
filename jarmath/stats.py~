""" Authored by Raj Maitra

    Statistics and Filters Package




"""

def linear_regression(price):
    """ This function determines the slope of an array of prices.

    Arguments:
        price: array of historical stock prices.
    
    Returns:
        slope: The slope of the price history.
        sigma: the standard deviation of the price history.

    """
    y = log(price)
    x = log(arange(len(y)) + 1)
    xy = x*y
    N = len(y)
    m1 = sum(xy)-(sum(x)*sum(y))/N
    m2 = sum(x*x)-(sum(x)**2)/N
    slope = m1/m2
    sigma = std(y)
    return slope, sigma

def moving_average(price,N):
    """ This function uses a moving average function to smoothen the price history.

    Arguments:
        price: This is the raw historical prices to be smoothened.
        N: This is the size of the moving average filter.
    
    Returns:
        price_ave: This is the smoothened price signal.

    """
    window = ones(int(N))/float(N)
    price_ave = convolve(price,window,'same')
    return price_ave

